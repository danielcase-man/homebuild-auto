FROM ubuntu:22.04

# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install basic utilities and dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    gnupg \
    jq \
    lsb-release \
    python3 \
    python3-pip \
    unzip \
    wget \
    bash \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Install AWS CLI
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf aws awscliv2.zip

# Install Docker CLI
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Install cline using reliable methods - multiple approaches for redundancy
# Method 1: Use pip with explicit executable paths
RUN pip3 install cline-cli && \
    ln -sf /usr/local/bin/cline /usr/bin/cline

# Method 2: Create a robust bash wrapper
RUN echo '#!/bin/bash\npython3 -m cline "$@"' > /usr/local/bin/cline-alt && \
    chmod +x /usr/local/bin/cline-alt

# Verify and create diagnostic info
RUN echo "Cline Installation Verification:" > /cline-check.txt && \
    which cline >> /cline-check.txt 2>&1 || echo "cline not in PATH" >> /cline-check.txt && \
    ls -la /usr/local/bin/ | grep cline >> /cline-check.txt 2>&1 && \
    python3 -m pip list | grep cline >> /cline-check.txt 2>&1 && \
    echo "PATH=$PATH" >> /cline-check.txt

# Set up working directory
WORKDIR /app

# Add script to ensure Docker socket is available
RUN echo '#!/bin/sh\n\
if [ ! -S /var/run/docker.sock ] && [ -S /tmp/docker.sock ]; then\n\
  ln -sf /tmp/docker.sock /var/run/docker.sock\n\
fi\n\
echo "Container startup: cline location: $(which cline 2>/dev/null || echo not found)"\n\
echo "Container startup: PATH=$PATH"\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

# Set PATH explicitly to include all likely cline locations
ENV PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:$PATH"

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
