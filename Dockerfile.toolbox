FROM ubuntu:22.04

# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install basic utilities and dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    gnupg \
    jq \
    lsb-release \
    python3 \
    python3-pip \
    python3-venv \
    unzip \
    wget \
    bash \
    nodejs \
    npm \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install AWS CLI
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf aws awscliv2.zip

# Install Docker CLI
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Create a virtual environment for CLine
RUN python3 -m venv /opt/cline-venv && \
    . /opt/cline-venv/bin/activate && \
    pip install --no-cache-dir --upgrade pip wheel setuptools && \
    pip install --no-cache-dir cline-cli

# Create reliable bin scripts with proper PATH configuration
RUN echo '#!/bin/bash\n. /opt/cline-venv/bin/activate && python -m cline "$@"' > /usr/local/bin/cline && \
    chmod +x /usr/local/bin/cline && \
    echo '#!/bin/bash\n. /opt/cline-venv/bin/activate && pip "$@"' > /usr/local/bin/pip3-cline && \
    chmod +x /usr/local/bin/pip3-cline

# Verify installation and create diagnostic info
RUN /usr/local/bin/cline --version > /cline-check.txt 2>&1 || echo "CLine version check failed" >> /cline-check.txt && \
    echo "Which cline: $(which cline)" >> /cline-check.txt && \
    echo "PATH: $PATH" >> /cline-check.txt && \
    ls -la /usr/local/bin/ >> /cline-check.txt && \
    ls -la /opt/cline-venv/bin/ >> /cline-check.txt

# Set up working directory
WORKDIR /app

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "Container starting..."\n\
echo "CLine location: $(which cline 2>/dev/null || echo not found)"\n\
echo "CLine version: $(/usr/local/bin/cline --version 2>&1 || echo failed)"\n\
echo "Container PATH: $PATH"\n\
echo "AWS CLI version: $(aws --version 2>&1 || echo not found)"\n\
echo "jq version: $(jq --version 2>&1 || echo not found)"\n\
echo "Running command: $@"\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

# Set PATH to include all relevant locations
ENV PATH="/usr/local/bin:/opt/cline-venv/bin:$PATH"

# Default command
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
