FROM ubuntu:22.04

# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install basic utilities and dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    gnupg \
    jq \
    lsb-release \
    python3 \
    python3-pip \
    python3-venv \
    unzip \
    wget \
    bash \
    nodejs \
    npm \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install AWS CLI
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf aws awscliv2.zip

# Install Docker CLI
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Create a mock CLine script since the actual CLine CLI is not available in PyPI
RUN mkdir -p /usr/local/cline-mock/bin && \
    echo '#!/bin/bash\n\
echo "CLine Mock CLI v1.0.0"\n\
if [ "$1" = "--version" ]; then\n\
  echo "cline-cli 1.0.0 (Mock Implementation)"\n\
  exit 0\n\
fi\n\
if [ "$1" = "mcp" ] && [ "$2" = "status" ]; then\n\
  echo "{\\"status\\": \\"ok\\", \\"message\\": \\"MCP Mock is running\\", \\"endpoint\\": \\"http://localhost:9876\\"}" \n\
  exit 0\n\
fi\n\
if [ "$1" = "mcp" ] && [ "$2" = "health" ]; then\n\
  echo "{\\"status\\": \\"ok\\", \\"message\\": \\"MCP Mock is healthy\\"}" \n\
  exit 0\n\
fi\n\
if [ "$1" = "mcp" ] && [ "$2" = "start" ]; then\n\
  echo "Starting mock MCP server..."\n\
  echo "Mock MCP server started"\n\
  exit 0\n\
fi\n\
if [ "$1" = "connect" ]; then\n\
  echo "Connected to mock endpoint $2"\n\
  exit 0\n\
fi\n\
if [ "$1" = "run" ]; then\n\
  echo "Running mock tool: $2"\n\
  echo "Mock tool completed successfully"\n\
  exit 0\n\
fi\n\
echo "Mock CLine executed with: $@"\n\
exit 0\n\
' > /usr/local/cline-mock/bin/cline && \
    chmod +x /usr/local/cline-mock/bin/cline

# Create symlink for the mock cline
RUN ln -sf /usr/local/cline-mock/bin/cline /usr/local/bin/cline

# Verify mock installation
RUN cline --version > /cline-check.txt && \
    echo "Which cline: $(which cline)" >> /cline-check.txt && \
    echo "CLine check complete" >> /cline-check.txt

# Set up working directory
WORKDIR /app

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "Container starting..."\n\
echo "CLine Mock location: $(which cline)"\n\
echo "CLine Mock version: $(cline --version)"\n\
echo "Container PATH: $PATH"\n\
echo "AWS CLI version: $(aws --version 2>&1 || echo not found)"\n\
echo "jq version: $(jq --version 2>&1 || echo not found)"\n\
echo "Running command: $@"\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

# Set PATH to include all relevant locations
ENV PATH="/usr/local/bin:/usr/local/cline-mock/bin:$PATH"

# Default command
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
